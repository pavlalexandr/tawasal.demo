@page "/usersPosts/{UserId}"
@page "/usersPosts/{UserId}/{Page:int}"
@using Application.Model
@using Application.Services
@attribute [Authorize]
@inject UserPostsService userPostsService

<h1>Users posts</h1>

@if (Model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Text</th>
                <th>Likes count</th>
                <th>Date</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var post in Model.Data)
            {
                <tr>
                    <td>@post.Text</td>
                    <td>@post.Likes</td>
                    <td>@post.PublishDate</td>

                </tr>
            }
        </tbody>
    </table>
    <div>
        @for (int i = 0; i < Model.TotalPages; i++)
        {
            <span>
                @if (Page != i)
                {
                    <a href="usersPosts/@UserId/@i"> @(i+1) </a>

                }
                else
                {
                    @(i+1)
                }
                |

            </span>
        }
    </div>
}

@code {
    private PaginatedView<UserPostView>? Model;

    [Parameter]
    public int Page { get; set; }
    [Parameter]
    public string UserId { get; set; }

    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && Model == null)
        {
            Model = await userPostsService.GetPaginatedView(UserId, Page);
            StateHasChanged();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Model != null)
            Model = await userPostsService.GetPaginatedView(UserId, Page);
    }
}